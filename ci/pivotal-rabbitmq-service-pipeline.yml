groups:
- name: all
  jobs:
  - get-product-version
  - deploy
  - broker-registrar
- name: deploy
  jobs:
  - get-product-version
  - deploy
- name: errands
  jobs:
  - broker-registrar

resources:
- name: pivotal-rabbitmq-service
  type: pivnet
  check_every: 4h
  source:
    api_token: {{pivnet_api_token}}
    product_slug: pivotal-rabbitmq-service
    product_version: {{pivotal-rabbitmq-service-version}}
    sort_by: semver
- name: concourse-deploy-rabbitmq
  type: git
  check_every: 4h
  source:
    uri: https://github.com/enaml-ops/concourse-deploy-rabbitmq
    branch: master
- name: omg-cli
  type: github-release
  check_every: 4h
  source:
    user: enaml-ops
    repository: omg-cli
- name: omg-product-bundle
  type: github-release
  check_every: 4h
  source:
    user: enaml-ops
    repository: omg-product-bundle
- name: {{deployment-name}}
  type: bosh-deployment
  source:
    ca_cert: {{bosh-cacert}}
    client_id: {{bosh-client-id}}
    client_secret: {{bosh-client-secret}}
    deployment: rabbitmq
    target: {{bosh-url}}
- name: stemcells
  type: pivnet
  source:
    api_token: {{pivnet_api_token}}
    product_slug: stemcells
    product_version: {{stemcell-version}}

resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

jobs:
- name: get-product-version
  plan:
    - get: concourse-deploy-rabbitmq
    - get: omg-cli
      params:
        globs:
        - omg-linux
    - get: omg-product-bundle
      trigger: true
      params:
        globs:
        - p-rabbitmq-plugin-linux
    - task: get-product-version
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-rabbitmq/ci/tasks/get-version-from-plugin.sh
        params:
          PRODUCT_PLUGIN: {{product_plugin}}
          OUTPUT_DIR: versions
        inputs:
        - name: concourse-deploy-rabbitmq
        - name: omg-cli
        - name: omg-product-bundle
        outputs:
        - name: versions
          path: ""
    - task: update-pipeline
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-rabbitmq/ci/tasks/update-pipeline.sh
        params:
          PIPELINE_NAME: deploy-rabbitmq
          CONCOURSE_URL: {{concourse-url}}
          CONCOURSE_USER: {{concourse-user}}
          CONCOURSE_PASS: {{concourse-pass}}
        inputs:
        - name: concourse-deploy-rabbitmq
        - name: versions
        outputs:
- name: deploy
  plan:
    - get: concourse-deploy-rabbitmq
    - get: omg-cli
      passed: [get-product-version]
      params:
        globs:
        - omg-linux
    - get: omg-product-bundle
      passed: [get-product-version]
      trigger: true
      params:
        globs:
        - p-rabbitmq-plugin-linux
    - get: pivotal-rabbitmq-service
      params:
        globs:
        - p-rabbitmq-*
    - get: stemcells
      trigger: true
      params:
        globs:
        - {{stemcell-cpi-glob}}
    - task: generate-manifest
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-rabbitmq/ci/tasks/generate-pivotal-rabbitmq-service-manifest.sh
        params:
          BOSH_CLIENT: {{bosh-user}}
          BOSH_CLIENT_SECRET: {{bosh-pass}}
          BOSH_CACERT: {{bosh-cacert}}
          PRODUCT_PLUGIN: {{product_plugin}}
          STEMCELL_VERSION: {{stemcell-version}}
          VAULT_ADDR: {{vault_addr}}
          VAULT_HASH_IP: {{vault_hash_ip}}
          VAULT_HASH_HOSTVARS: {{vault_hash_hostvars}}
          VAULT_HASH_MISC: {{vault_hash_misc}}
          VAULT_HASH_PASSWORD: {{vault_hash_password}}
          VAULT_TOKEN: {{vault_token}}
          OUTPUT_DIR: manifest
        inputs:
        - name: concourse-deploy-rabbitmq
        - name: omg-cli
        - name: omg-product-bundle
        outputs:
        - name: manifest
          path: ""
    - task: extract-tile
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-rabbitmq/ci/tasks/extract-tile.sh
        params:
          PRODUCT_DIR: pivotal-rabbitmq-service
          OUTPUT_DIR: pivotal-rabbitmq-service-extracted
        inputs:
        - name: concourse-deploy-rabbitmq
        - name: pivotal-rabbitmq-service
        outputs:
        - name: pivotal-rabbitmq-service-extracted
          path: ""
    - put: {{deployment-name}}
      params:
        manifest: manifest/deployment.yml
        stemcells:
        - stemcells/bosh-stemcell*.tgz
        releases:
        - pivotal-rabbitmq-service-extracted/releases/*.tgz
- name: broker-registrar
  plan:
    - get: concourse-deploy-rabbitmq
    - get: {{deployment-name}}
      trigger: true
      passed: [deploy]
    - task: broker-registrar
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-rabbitmq/ci/tasks/run-errand.sh
        params:
          BOSH_CACERT: {{bosh-cacert}}
          BOSH_CLIENT: {{bosh-client-id}}
          BOSH_CLIENT_SECRET: {{bosh-client-secret}}
          BOSH_DEPLOYMENT_NAME: p-rabbitmq
          BOSH_ERRAND: broker-registrar
          BOSH_TARGET: {{bosh-url}}
        inputs:
        - name: concourse-deploy-rabbitmq
        outputs:
